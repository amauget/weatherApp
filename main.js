(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>u});var r=t(354),o=t.n(r),i=t(314),a=t.n(i),A=t(417),c=t.n(A),d=new URL(t(150),t.b),s=a()(o()),l=c()(d);s.push([n.id,`:root{\n  margin:0;\n  padding:0;\n}\n\nbody{\n  background-image: url(${l});\n  background-size: 100vw 120vh;\n  background-repeat: no-repeat;\n  /* background-position-y: 70%; */\n  display: grid;\n  grid-template-columns: repeat(2, auto) min-content;\n  grid-template-rows: auto;\n  overflow-x: hidden;\n  margin:0;\n}\n\n.loader {\n  grid-row: 3/4;\n  grid-column: 1/3;\n  align-self: center;\n  justify-self: center;\n  width: 15px;\n  aspect-ratio: 1;\n  border-radius: 50%;\n  animation: l5 1s infinite linear alternate;\n  display: none;\n}\n@keyframes l5 {\n    0%  {box-shadow: 20px 0 #000, -20px 0 #0002;background: #000 }\n    33% {box-shadow: 20px 0 #000, -20px 0 #0002;background: #0002}\n    66% {box-shadow: 20px 0 #0002,-20px 0 #000; background: #0002}\n    100%{box-shadow: 20px 0 #0002,-20px 0 #000; background: #000 }\n}\nbutton:hover{\n  cursor: pointer;\n  background-color: rgb(214, 212, 212);\n}\n.searchContainer{\n  grid-row: 2/3;\n  grid-column: 1/3;\n  justify-self: center;\n  display:grid;\n  grid-template-columns: repeat(2, min-content);\n  grid-template-rows: repeat(2, auto);\n}\n    label{\n      grid-column: 1/2;\n      grid-row: 1/2;\n      font-size: 1.3rem;\n      font-weight: bold;\n      padding-bottom: 10px;\n      text-align: center;\n    }\n    .search{\n      grid-column: 1/2;\n      grid-row: 2/3;\n      border:1px solid black;\n      border-radius: 7px;\n      justify-self: center;\n      width:25rem;\n      font-size: 1.3rem;\n      background: #ffffff;\n      color:black;\n    }\n    .submit{\n      grid-column: 2/3;\n      grid-row: 2/3;\n      justify-self: end;\n      width:10rem;\n      border:1px solid black;\n      border-radius: 15px;\n      background:#ffffff;\n      color:rgb(0, 0, 0);\n      font-size: 1.15rem;\n      margin-left: 1vw;\n    }\n\n.unitsContainer{\n  grid-row: 1/2;\n  grid-column: 2/3;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: start;\n  padding-right: 2vw;\n  /* height: fit-content; */\n  gap: 2vw;\n}\n    .metric{\n      background: white\n    }\n    .imperial, .metric{\n      border: none;\n      border-radius: 15px;\n    }\n    .imperial:hover, .metric:hover{\n      background-color: white;\n    }\n    .imperial{\n      background: none;\n    }\n.currentContainer{\n  grid-row: 3/4;\n  grid-column: 1/3;\n  margin-top: 10vh;\n  text-align: center;\n  justify-self: center;\n  display: grid;\n  grid-template-columns: repeat(2 auto);\n  grid-template-rows: repeat(4, min-content);\n  background: linear-gradient(to bottom, rgba(15, 182, 0, 0.233), rgba(255, 255, 255, 0.411));\n  padding: 0 1vw;\n}\n    .area{\n      grid-row: 3/4;\n      grid-column: 1/3;\n      font-size: 1.7rem;\n    }\n    .currentTemp{\n      grid-row: 1/2;\n      grid-column: 1/2;\n      align-self: end;\n      font-size: 2.3rem;\n      font-weight: bold;\n      padding: 0 2vw;\n    }\n    .currentIcon{\n      grid-row: 1/2;\n      grid-column: 2/3;\n      height: auto;\n      width: 13vw;\n    }\n    .currentDescription{\n      grid-row: 2/3;\n      grid-column: 1/2;\n    }\n    .currentHighLow{\n      grid-row: 2/3;\n      grid-column: 2/3;\n    }\n    .currentDescription, .currentHighLow{\n      font-size: 1.3rem;\n    }\n.forecastContainer{\n  grid-row: 4/5;\n  grid-column: 1/3;\n  justify-self: center;\n  display: flex;\n  overflow-x: auto;\n  align-items: center;\n  justify-content: space-evenly;\n  text-align: center;\n  margin-top: 7vh;\n  background: linear-gradient(to bottom, rgba(15, 182, 0, 0.233), rgba(255, 255, 255, 0.411));\n  width:100vw;\n  min-width: 900px;\n}\n    .dayContainer{\n      display:grid;\n      grid-template-rows: repeat(4, auto);\n      justify-content: center;\n      align-items: center;\n      margin: 0 2vw;\n      min-width: 10%;\n      font-size: 1.2rem;\n    }\n    .date{\n      grid-row: 1/2;\n      align-self: start;\n    }\n    img{\n      grid-row: 2/3;\n      justify-self: center;\n    }\n    .description{\n      grid-row: 3/4;\n    }`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,QAAQ;EACR,SAAS;AACX;;AAEA;EACE,yDAAmD;EACnD,4BAA4B;EAC5B,4BAA4B;EAC5B,gCAAgC;EAChC,aAAa;EACb,kDAAkD;EAClD,wBAAwB;EACxB,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,kBAAkB;EAClB,oBAAoB;EACpB,WAAW;EACX,eAAe;EACf,kBAAkB;EAClB,0CAA0C;EAC1C,aAAa;AACf;AACA;IACI,KAAK,sCAAsC,CAAC,iBAAiB;IAC7D,KAAK,sCAAsC,CAAC,iBAAiB;IAC7D,KAAK,qCAAqC,EAAE,iBAAiB;IAC7D,KAAK,qCAAqC,EAAE,iBAAiB;AACjE;AACA;EACE,eAAe;EACf,oCAAoC;AACtC;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,oBAAoB;EACpB,YAAY;EACZ,6CAA6C;EAC7C,mCAAmC;AACrC;IACI;MACE,gBAAgB;MAChB,aAAa;MACb,iBAAiB;MACjB,iBAAiB;MACjB,oBAAoB;MACpB,kBAAkB;IACpB;IACA;MACE,gBAAgB;MAChB,aAAa;MACb,sBAAsB;MACtB,kBAAkB;MAClB,oBAAoB;MACpB,WAAW;MACX,iBAAiB;MACjB,mBAAmB;MACnB,WAAW;IACb;IACA;MACE,gBAAgB;MAChB,aAAa;MACb,iBAAiB;MACjB,WAAW;MACX,sBAAsB;MACtB,mBAAmB;MACnB,kBAAkB;MAClB,kBAAkB;MAClB,kBAAkB;MAClB,gBAAgB;IAClB;;AAEJ;EACE,aAAa;EACb,gBAAgB;EAChB,aAAa;EACb,6BAA6B;EAC7B,kBAAkB;EAClB,kBAAkB;EAClB,yBAAyB;EACzB,QAAQ;AACV;IACI;MACE;IACF;IACA;MACE,YAAY;MACZ,mBAAmB;IACrB;IACA;MACE,uBAAuB;IACzB;IACA;MACE,gBAAgB;IAClB;AACJ;EACE,aAAa;EACb,gBAAgB;EAChB,gBAAgB;EAChB,kBAAkB;EAClB,oBAAoB;EACpB,aAAa;EACb,qCAAqC;EACrC,0CAA0C;EAC1C,2FAA2F;EAC3F,cAAc;AAChB;IACI;MACE,aAAa;MACb,gBAAgB;MAChB,iBAAiB;IACnB;IACA;MACE,aAAa;MACb,gBAAgB;MAChB,eAAe;MACf,iBAAiB;MACjB,iBAAiB;MACjB,cAAc;IAChB;IACA;MACE,aAAa;MACb,gBAAgB;MAChB,YAAY;MACZ,WAAW;IACb;IACA;MACE,aAAa;MACb,gBAAgB;IAClB;IACA;MACE,aAAa;MACb,gBAAgB;IAClB;IACA;MACE,iBAAiB;IACnB;AACJ;EACE,aAAa;EACb,gBAAgB;EAChB,oBAAoB;EACpB,aAAa;EACb,gBAAgB;EAChB,mBAAmB;EACnB,6BAA6B;EAC7B,kBAAkB;EAClB,eAAe;EACf,2FAA2F;EAC3F,WAAW;EACX,gBAAgB;AAClB;IACI;MACE,YAAY;MACZ,mCAAmC;MACnC,uBAAuB;MACvB,mBAAmB;MACnB,aAAa;MACb,cAAc;MACd,iBAAiB;IACnB;IACA;MACE,aAAa;MACb,iBAAiB;IACnB;IACA;MACE,aAAa;MACb,oBAAoB;IACtB;IACA;MACE,aAAa;IACf",sourcesContent:[":root{\n  margin:0;\n  padding:0;\n}\n\nbody{\n  background-image: url(./externalContent/clouds.jpg);\n  background-size: 100vw 120vh;\n  background-repeat: no-repeat;\n  /* background-position-y: 70%; */\n  display: grid;\n  grid-template-columns: repeat(2, auto) min-content;\n  grid-template-rows: auto;\n  overflow-x: hidden;\n  margin:0;\n}\n\n.loader {\n  grid-row: 3/4;\n  grid-column: 1/3;\n  align-self: center;\n  justify-self: center;\n  width: 15px;\n  aspect-ratio: 1;\n  border-radius: 50%;\n  animation: l5 1s infinite linear alternate;\n  display: none;\n}\n@keyframes l5 {\n    0%  {box-shadow: 20px 0 #000, -20px 0 #0002;background: #000 }\n    33% {box-shadow: 20px 0 #000, -20px 0 #0002;background: #0002}\n    66% {box-shadow: 20px 0 #0002,-20px 0 #000; background: #0002}\n    100%{box-shadow: 20px 0 #0002,-20px 0 #000; background: #000 }\n}\nbutton:hover{\n  cursor: pointer;\n  background-color: rgb(214, 212, 212);\n}\n.searchContainer{\n  grid-row: 2/3;\n  grid-column: 1/3;\n  justify-self: center;\n  display:grid;\n  grid-template-columns: repeat(2, min-content);\n  grid-template-rows: repeat(2, auto);\n}\n    label{\n      grid-column: 1/2;\n      grid-row: 1/2;\n      font-size: 1.3rem;\n      font-weight: bold;\n      padding-bottom: 10px;\n      text-align: center;\n    }\n    .search{\n      grid-column: 1/2;\n      grid-row: 2/3;\n      border:1px solid black;\n      border-radius: 7px;\n      justify-self: center;\n      width:25rem;\n      font-size: 1.3rem;\n      background: #ffffff;\n      color:black;\n    }\n    .submit{\n      grid-column: 2/3;\n      grid-row: 2/3;\n      justify-self: end;\n      width:10rem;\n      border:1px solid black;\n      border-radius: 15px;\n      background:#ffffff;\n      color:rgb(0, 0, 0);\n      font-size: 1.15rem;\n      margin-left: 1vw;\n    }\n\n.unitsContainer{\n  grid-row: 1/2;\n  grid-column: 2/3;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: start;\n  padding-right: 2vw;\n  /* height: fit-content; */\n  gap: 2vw;\n}\n    .metric{\n      background: white\n    }\n    .imperial, .metric{\n      border: none;\n      border-radius: 15px;\n    }\n    .imperial:hover, .metric:hover{\n      background-color: white;\n    }\n    .imperial{\n      background: none;\n    }\n.currentContainer{\n  grid-row: 3/4;\n  grid-column: 1/3;\n  margin-top: 10vh;\n  text-align: center;\n  justify-self: center;\n  display: grid;\n  grid-template-columns: repeat(2 auto);\n  grid-template-rows: repeat(4, min-content);\n  background: linear-gradient(to bottom, rgba(15, 182, 0, 0.233), rgba(255, 255, 255, 0.411));\n  padding: 0 1vw;\n}\n    .area{\n      grid-row: 3/4;\n      grid-column: 1/3;\n      font-size: 1.7rem;\n    }\n    .currentTemp{\n      grid-row: 1/2;\n      grid-column: 1/2;\n      align-self: end;\n      font-size: 2.3rem;\n      font-weight: bold;\n      padding: 0 2vw;\n    }\n    .currentIcon{\n      grid-row: 1/2;\n      grid-column: 2/3;\n      height: auto;\n      width: 13vw;\n    }\n    .currentDescription{\n      grid-row: 2/3;\n      grid-column: 1/2;\n    }\n    .currentHighLow{\n      grid-row: 2/3;\n      grid-column: 2/3;\n    }\n    .currentDescription, .currentHighLow{\n      font-size: 1.3rem;\n    }\n.forecastContainer{\n  grid-row: 4/5;\n  grid-column: 1/3;\n  justify-self: center;\n  display: flex;\n  overflow-x: auto;\n  align-items: center;\n  justify-content: space-evenly;\n  text-align: center;\n  margin-top: 7vh;\n  background: linear-gradient(to bottom, rgba(15, 182, 0, 0.233), rgba(255, 255, 255, 0.411));\n  width:100vw;\n  min-width: 900px;\n}\n    .dayContainer{\n      display:grid;\n      grid-template-rows: repeat(4, auto);\n      justify-content: center;\n      align-items: center;\n      margin: 0 2vw;\n      min-width: 10%;\n      font-size: 1.2rem;\n    }\n    .date{\n      grid-row: 1/2;\n      align-self: start;\n    }\n    img{\n      grid-row: 2/3;\n      justify-self: center;\n    }\n    .description{\n      grid-row: 3/4;\n    }"],sourceRoot:""}]);const u=s},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);r&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],d=r.base?c[0]+r.base:c[0],s=i[d]||0,l="".concat(d," ").concat(s);i[d]=s+1;var u=t(l),g={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(g);else{var p=o(g,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:p,references:1})}a.push(l)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var c=r(n,o),d=0;d<i.length;d++){var s=t(i[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=c}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},150:(n,e,t)=>{n.exports=t.p+"4fa30e19f76ac215d076.jpg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{function n(n,e){let t=document.createElement("p");return t.className=n,t.textContent=e,t}var e=t(72),r=t.n(e),o=t(825),i=t.n(o),a=t(659),A=t.n(a),c=t(56),d=t.n(c),s=t(540),l=t.n(s),u=t(113),g=t.n(u),p=t(208),m={};async function C(e,t){const r=await async function(n,e){document.querySelector(".loader").style.display="block";const t=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=6b2610dac8e14e62a52205458243105&q=${e}&days=10&aqi=yes&alerts=no`),r=await t.json();console.log(r);const o=r.location,i=r.current,a=r.forecast;let A,c,d,s,l,u={};"metric"===n?(A=i.temp_c+"°C",c=a.forecastday[0].day.maxtemp_c+"°C",d=a.forecastday[0].day.mintemp_c+"°C",s=i.feelslike_c+"°C"):(A=i.temp_f+"°F",c=a.forecastday[0].day.maxtemp_f+"°F",d=a.forecastday[0].day.mintemp_f+"°F",s=i.feelslike_f+"°F"),l="United States of America"===o.country?o.region:o.country,u={current:{city:o.name,region:l,temp:A,humidity:i.humidity,description:i.condition.text,icon:i.condition.icon,high:c,low:d,feelsLike:s},forecast:{}};let g=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];for(let e=0;e<10;e++){let t=a.forecastday[e],r=new Date(a.forecastday[e].date).getDay(),o=null;o=0===e?"Today":g[r];let i,A,c=t.day.condition.icon,d=t.day.condition.text;"metric"===n?(i=t.day.maxtemp_c+"°C",A=t.day.mintemp_c+"°C"):(i=t.day.maxtemp_f+"°F",A=t.day.mintemp_f+"°F");let s=t.avghumidity;u.forecast[e]={date:o,icon:c,description:d,high:i,low:A,humidity:s}}return u}(e,t);!function(e){let t=document.querySelector(".currentContainer");t.innerHTML="";let r=n("currentTemp",e.temp),o=document.createElement("img");o.className="currentIcon",o.src=e.icon;let i=n("currentDescription",e.description),a=n("area",`${e.city}, ${e.region}`),A=n("currentHighLow",e.high+" / "+e.low);t.append(r,o,i,a,A)}(r.current),function(e){let t=document.querySelector(".forecastContainer");t.innerHTML="";for(let r=0;r<10;r++){let o=document.createElement("div");o.className="dayContainer";let i=e[r],a=n(".date",i.date),A=document.createElement("img");A.src=i.icon;let c=n(".description",i.description),d=n("highLow",`${i.high} / ${i.low}`),s=n("humidity",i.humidity);o.append(a,A,c,d,s),t.appendChild(o)}}(r.forecast),document.querySelector(".loader").style.display="none"}m.styleTagTransform=g(),m.setAttributes=d(),m.insert=A().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=l(),r()(p.A,m),p.A&&p.A.locals&&p.A.locals,function(){let n="metric",e="Honolulu";C(n,e),document.querySelector(".submit").addEventListener("click",(()=>r()));const t=document.querySelector(".search");t.addEventListener("keypress",(n=>{n.preventDefault(),"Enter"===n.key?r():t.value+=n.key}));const r=()=>{e=document.querySelector(".search").value,C(n,e),t.value=""},o=document.querySelector(".imperial"),i=document.querySelector(".metric");o.addEventListener("click",(()=>{n="imperial",o.style.background="white",i.style.background="none",C(n,e)})),i.addEventListener("click",(()=>{n="metric",o.style.background="none",i.style.background="white",C(n,e)}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,